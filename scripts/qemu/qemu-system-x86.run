#!/bin/bash

log_message() {
  local timestamp
  timestamp=$(date "+%Y-%m-%d %H:%M:%S")
  local message="[$timestamp] $1"

  # Define color codes
  local green="\e[32m"
  local red="\e[31m"
  local reset="\e[0m"

  # Check if the message contains "Error" and apply red color accordingly
  if [[ $1 == *"Error"* ]]; then
    echo -e "${red}${message}${reset}"
  else
    echo -e "${green}${message}${reset}"
  fi
}

check_drivers_compiled() {
  local driver_crazydriver="sources/crazydriver.ko"

  if [ -e "$driver_crazydriver" ]; then
    log_message "[*] Drivers found: crazydriver"
    return 0  # [*] Success
  else
    log_message "[*] Error: Drivers crazydriver not found"
    return 1  # [*] Failure
  fi
}

compact_busybox() {
  local script_dir="scripts/qemu/initramfs"

  # Check if the script directory exists
  if [ ! -d "$script_dir" ]; then
    log_message "[*] Error: Script directory not found: $script_dir"
    return 1
  fi

  # Change to the script directory
  pushd "$script_dir" > /dev/null || return 1

  # Check if the compact script exists and is executable
  if [ ! -x "compress" ]; then
    log_message "[*] Error: compress script not found or not executable."
    popd > /dev/null || return 1
    return 1
  fi

  # Run the compact script and suppress output
  ./compress

  # Return to the previous directory
  popd > /dev/null || return 1
}

qemu_system() {
  log_message "[*] Starting an emulation "

  # Check compiled drivers
  if check_drivers_compiled; then

    # Copy modules compiled for initramfs
    log_message "[*] Moving compiled drivers for /opt/"
    cp -r sources scripts/qemu/initramfs/opt/

    if [ -f "/etc/debian_version" ]; then
      log_message "[*] Compressing initramfs"
      compact_busybox
      local vmlinuz="/boot/vmlinuz-$(uname -r)"
    else 
      log_message "[*] Error: this distro not Debian-based"
      return -1
    fi

    log_message "[*] Running qemu-system-x86_64"
    sudo qemu-system-x86_64 -kernel $vmlinuz \
        -initrd scripts/qemu/initramfs.img \
        -append nokaslr \
        -m 2G \
        -append 'console=ttyS0' \
        -nographic \
        -serial mon:stdio \
        -enable-kvm \
        -cpu host \

  else
    # If drivers are not compiled, show error
    log_message "[*] Error: Aborting emulation due to missing drivers"
  fi
}

# Run the emulation
qemu_system
